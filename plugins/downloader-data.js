import { createHash } from 'crypto';
import PhoneNumber from 'awesome-phonenumber';

let handler = async (m, { conn, usedPrefix, isAdmin, isGroupAdmin }) => {
  // Verificar si el comando est√° siendo usado en un grupo y si el remitente es un administrador
  if (!m.isGroup) {
    return conn.reply(m.chat, 'Este comando solo puede ser utilizado en grupos.', m);
  }
  if (!isAdmin && !isGroupAdmin) {
    return conn.reply(m.chat, 'Este comando solo puede ser utilizado por administradores.', m);
  }

  // Obtener el ID del usuario ya sea por menci√≥n o por respuesta a un mensaje
  let userId = m.mentionedJid && m.mentionedJid[0] ? m.mentionedJid[0] : m.quoted ? m.quoted.sender : null;

  // Si no se menciona o responde a ning√∫n usuario
  if (!userId) {
    return conn.reply(m.chat, `Etiqueta a un usuario o responde a su mensaje, por ejemplo: *${usedPrefix}data @usuario*`, m);
  }

  // Obtener la informaci√≥n del usuario
  let user = global.db.data.users[userId];
  let phoneNumber = new PhoneNumber('+' + userId.replace('@s.whatsapp.net', '')); // Obtener el n√∫mero de tel√©fono
  let serialNumber = createHash('md5').update(userId).digest('hex'); // N√∫mero de serie basado en ID
  let whatsappLink = `https://wa.me/${phoneNumber.getNumber('significant')}`; // Crear el enlace de WhatsApp
  let username = await conn.getName(userId); // Obtener el nombre de usuario

  // Obtener el pa√≠s y la bandera del n√∫mero
  let country = phoneNumber.getRegionCode(); // C√≥digo del pa√≠s (ejemplo: US, MX, etc.)
  let countryName = country ? phoneNumber.getRegionCode() : 'Desconocido'; // Nombre del pa√≠s o "Desconocido"
  let flag = getFlagEmoji(country); // Obtener la bandera como emoji

  // Si el usuario no est√° registrado, asignar valores predeterminados
  let limit = user ? user.limit || 0 : 'No tiene registro'; // Cr√©ditos del usuario o "No tiene registro"
  let registerDate = user ? new Date(user.registered || Date.now()).toLocaleDateString() : 'No tiene registro'; // Fecha de registro o "No tiene registro"
  let isActive = user ? (user.banned ? 'BANEADO [‚ùå]' : 'LIBRE [‚úÖ]') : 'No tiene registro'; // Estado de actividad o "No tiene registro"

  // Validar la edad: si es v√°lida y positiva, mostrarla, si no, mostrar "Desconocido"
  let age = user && user.age > 0 ? user.age : 'Desconocido';

  // Crear el mensaje de respuesta
  let profileInfo = `
‚ù∞üîó‚ù± *ID* ‚Üí ${whatsappLink}
‚ù∞üë§‚ù± *NOMBRE* ‚Üí ${user ? username : 'No tiene registro'}
‚ù∞üìÖ‚ù± *EDAD* ‚Üí ${user ? age + ' a√±os' : 'No tiene registro'}
‚ù∞üí¨‚ù± *USUARIO* ‚Üí @${userId.split('@')[0]}
‚ù∞üåç‚ù± *PA√çS* ‚Üí ${flag} ${countryName}
‚ù∞üí∞‚ù± *CREDITOS* ‚Üí ${limit}
‚ù∞üóì‚ù± *REGISTRO* ‚Üí ${registerDate}
‚ù∞üíØ‚ù± *ESTADO* ‚Üí ${isActive}
‚ù∞üî¢‚ù± *N√öMERO DE SERIE* ‚Üí ${serialNumber}
  `.trim();

  // Enviar la informaci√≥n del perfil
  await conn.reply(m.chat, profileInfo, m, {
    mentions: [userId] // Mencionar al usuario
  });
}

// Funci√≥n para obtener la bandera basada en el c√≥digo del pa√≠s
function getFlagEmoji(countryCode) {
  if (!countryCode) return '';
  const codePoints = countryCode
    .toUpperCase()
    .split('')
    .map(char => 127397 + char.charCodeAt());
  return String.fromCodePoint(...codePoints);
}

handler.help = ['data @usuario'];
handler.tags = ['info'];
handler.command = /^data$/i; // El comando ser√° '.data'
handler.admin = true; // Solo para administradores
handler.group = true; // Solo en grupos

export default handler;
